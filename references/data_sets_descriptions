---raw data in data/raw

*** df1_KF: Created with <parse_xar.py>. sep=tab
[#Anim x keyframes] x [17 joints, time (timestamp in seconds), id (anim)]. Joint values in radians
Only keyframes as extracted from the .xar files. For joints without value for particular keyframes, previous value was
replicated.

*** df10_KF: Created with <parse_xar_raw.py>
[#Anim x keyframes] x [17 joints, keyframe (keyframe number), id (anim)]. Joint values in degrees.
For joints without value, Choregraphe was used to record them from the interpolated animation

*** df1_50fps: Created with <sampling_animations.py> (from project EXP3_Generation)
[#Anim x timesteps] x [17 joints, timestep (in secs), id (anim)] (14053,19)
Sampled with 50 fps (0.02 secs sampling rate) from the *plymouth-animations set*.
In the end of each animation, the standInit posture is reached and sampled in the same way
All animation start interpolating from standINit towards the first keyframe.
Category tags are the ones assigned *before* the behavioral experiment.

*** df2_50fps: Created with <sampling_animations_no_animList.py> (from project EXP3_Generation)
[#Anim x timesteps] x [17 joints, timestep (in secs), id (anim)] (116182,19)
Sampled with 50 fps (0.02 secs sampling rate) from the *robot-animation-library*, which contains all the Stand animations for Pepper.
In the end of each animation, the standInit posture is reached and sampled in the same way
All animation start interpolating from standINit towards the first keyframe.

***df3_25fps: Created with <sampling_animations_LEDs.py> (from project EXP3_Generation) - Plymouth Animations
Shape: (5074, 68)
1. In Choregraphe standInit added 15 frames after the last keyframe.
2. With <parse_xar_fps> the fps was changed to 15
3. [17 joints, timestep (in secs), category (anim), id (anim), leds_keys], where leds_keys are the flattened 48 values for 16 eyes LEDs with RGB
=======================================

--- Sampled 50fps input_set:data/processed/sampling

*** df11_50fps: Created with <correct_out_of_range.py>
Transformation of df1_50fps. The out of naoqi range joint values have been corrected (replaced by the naoqi limit)
Category tags are the ones assigned *before* the behavioral experiment.

*** df12_50fps: Created with <augment_mirroring.py>
Augmentation of df11_50fps, doubles the training examples.
For the additional examples, id of animation ends to '_tr'.
They were created by transforming the initial joint values as follows:
1. 'HeadYaw', 'HipRoll': The sign of the value is inversed
2. LArm joints are swapped with RArm joints and vice versa
3. Reverse signs for mirroring joints: 'LShoulderRoll', 'LElbowRoll', 'LElbowYaw', 'LWristYaw', 'RShoulderRoll', 'RElbowRoll', 'RElbowYaw', 'RWristYaw'
Category tags are the ones assigned *before* the behavioral experiment.

*** df13_50fps: Created with <norm_kf_plus_time.py>
Transformation of df12_50fps. (28106,19)
1. Time has been transformed into difference between subsequent timestamps (but not normalized).
2. Joint values have been normalized in (0,1) with MinMax Scaler, where min max was the original *naoqi* range limits per joint.
Category tags are the ones assigned *after* the behavioral experiment.

*** df14_20fps: Created with <downsample.py>
Transformation of df13_50fps. (28106,19) ---> (9369,19)
Dawnsampled to 20fps (1/3 of the frames are kept)
Category tags are the ones assigned *after* the behavioral experiment.

*** df21_50fps: Created with <correct_out_of_range.py>
Transformation of df2_50fps. The out of naoqi range joint values have been corrected (replaced by the naoqi limit)

*** df22_50fps: Created with <augment_mirroring.py>
Augmentation of df21_50fps, doubles the training examples.
For the additional examples, id of animation ends to '_tr'.
They were created by transforming the initial joint values as follows:
1. 'HeadYaw', 'HipRoll': The sign of the value is inversed
2. LArm joints are swapped with RArm joints and vice versa
3. Reverse signs for mirroring joints: 'LShoulderRoll', 'LElbowRoll', 'LElbowYaw', 'LWristYaw', 'RShoulderRoll', 'RElbowRoll', 'RElbowYaw', 'RWristYaw'

*** df23_50fps: Created with <norm_kf_plus_time.py>
Transformation of df22_50fps. Size ((232360,19))
1. Time has been transformed into difference between subsequent timestamps (but not normalized).
2. Joint values have been normalized in (0,1) with MinMax Scaler, where min max was the original *naoqi* range limits per joint.

*** df24_20fps: Created with <downsample.py>
Transformation of df23_50fps. (232360,19) ---> (78515,19)
Dawnsampled to 20fps (1/3 of the frames are kept)

*** df31_25fps: Created with <augment_mirroring.py>
Transformed from df3_25fps
Shape: (10148, 68)

*** df32_25fps: Created with <norm_samp_leds.py>
Transformed from df31_25fps
Shape: (10148, 68)


=======================================

--- Keyframes input_set: data/processed/keyframes/anim_KF

*** df2_KF: Created with <correct_out_of_range.py>
Transformation of df1_KF
The out of naoqi range joint values have been corrected (replaced by the naoqi limit)

*** df5_KF: Created with <augment_mirroring.py>
Augmentation of df2_KF, doubles the training examples.
For the additional examples, id of animation ends to '_tr'.
They were created by transforming the initial joint values as follows:
1. 'HeadYaw', 'HipRoll': The sign of the value is inversed
2. LArm joints are swapped with RArm joints and vice versa
3. Reverse signs for mirroring joints: 'LShoulderRoll', 'LElbowRoll', 'LElbowYaw', 'LWristYaw', 'RShoulderRoll', 'RElbowRoll', 'RElbowYaw', 'RWristYaw'

*** df6_KF: Created with <norm_kf_plus_time.py>
Transformation of df5_KF.
1. Time has been transformed into difference between subsequent timestamps (but not normalized).
2. Joint values have been normalized in (0,1) with MinMax Scaler, where min max was the original *naoqi* range limits per joint.

*** df7_KF: Created with <norm_kf_plus_time.py>
Transformation of df5_KF.
1. Time has been transformed into difference between subsequent timestamps (but not normalized).
2. Joint values have been normalized in (0,1) with MinMax Scaler, where min max was the *dataset* range limits per joint.

*** df11_KF: Created with <transform_raw.py>
Based on the raw dataset df10_KF. The following transformations are applied:
1. Keyframes to timestamps (keyframe number * 1/fps). THe column is renamed to 'time'
2. Joint values to radians from degrees (all joints except LHand, RHand)
3. Keyframes shifted forward by 20
4. Init posture added at keyframe 1 = 0.04 sec

*** df12_KF: Created with <correct_out_of_range.py>
Transformation of df11_KF.
The out of naoqi range joint values have been corrected (replaced by the naoqi limit)

*** df13_KF: Created with <augment_mirroring.py>
Augmentation of df12_KF, doubles the training examples.
For the additional examples, id of animation ends to '_tr'.
They were created by transforming the initial joint values as follows:
1. 'HeadYaw', 'HipRoll': The sign of the value is inversed
2. LArm joints are swapped with RArm joints and vice versa
3. Reverse signs for mirroring joints: 'LShoulderRoll', 'LElbowRoll', 'LElbowYaw', 'LWristYaw', 'RShoulderRoll', 'RElbowRoll', 'RElbowYaw', 'RWristYaw'

*** df14_KF: Created with <norm_kf_plus_time.py>
Transformation of df13_KF.
1. Time has been transformed into difference between subsequent timestamps (but not normalized).
2. Joint values have been normalized in (0,1) with MinMax Scaler, where min max was the original *naoqi* range limits per joint.





============================================

labels_set: data/processed/labels

*** y_va:
Shape: (36, 3)
#Anim x [nameAnim,valence_mean,arousal_mean]

*** y_va_cat:
Shape: (36, 4)
Created with <va_scores_2category.py>
#Anim x [,nameAnim,valence_mean,arousal_mean,Category]

*** y_va_cat_aug:
Shape: (72, 4)
Created with <augmentation.py>
#Anim x [,nameAnim,valence_mean,arousal_mean,Category]
Double the entries of the initial labels to include the ones with _tr which are the mirrored animations

*** y_va_cat_ind_ratings.csv
Shape: (780, 4)
# Participants x Anim x [,nameAnim,valence_mean,arousal_mean,Category]
Individual scores

*** y_va_cat_ind_ratings_aug.csv
Shape: (1560, 4)
# 2 x Participants x Anim x [,nameAnim,valence_mean,arousal_mean,Category]
Individual scores plus _tr augmentation

==============================================

Scalers

j_scaler_ds_lim_df7_KF.pkl

j_scaler_nao_lim_df6_KF.pkl

j_scaler_nao_lim_df14_KF.pkl

j_scaler_nao_lim_df13_50fps.pkl